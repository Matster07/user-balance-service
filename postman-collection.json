{
	"info": {
		"_postman_id": "e5cb7c68-757c-4ff3-8316-80c6e822ef17",
		"name": "Avito",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Deposit",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"account_id\": 1,\r\n    \"amount\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/v1/account/deposit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"account",
						"deposit"
					]
				},
				"description": "Request body:\r\n\r\naccount_id - (uint) идентификатор счета\r\n\r\namount - (uint) сумма пополнения\r\n\r\nDescription: при отсутствии счета с указанным идентификатором, создается и пополняется новый"
			},
			"response": []
		},
		{
			"name": "Deposit 2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"account_id\": 2,\r\n    \"amount\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/v1/account/deposit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"account",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get balance",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/v1/accounts/1/balance",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"accounts",
						"1",
						"balance"
					]
				},
				"description": "Query:\r\n\r\naccount_id - (uint) идентификатор счета\r\n\r\nDescription: переводит зарезервированную сумму на отдельный счет, создает запись с запонанием статуса обработки заказа, добавляет перевод в историю."
			},
			"response": []
		},
		{
			"name": "Withdrawal",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"account_id\": 1,\r\n    \"amount\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/v1/account/withdraw",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"account",
						"withdraw"
					]
				},
				"description": "Request body:\r\n\r\nfrom - (uint) кто снимает\r\n\r\namount - (float) сумма перевода\r\n\r\nDescription: списывает деньги с указанного счета. Добавляет перевод в историю транзакций со типом \"WITHDRAWAL\""
			},
			"response": []
		},
		{
			"name": "Transfer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from\": 1,\r\n    \"amount\": 3000,\r\n    \"to\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/v1/account/transfer",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"account",
						"transfer"
					]
				},
				"description": "Request body:\r\n\r\nfrom - (uint) от кого\r\n\r\namount - (float) сумма перевода\r\n\r\nto - (uint) кому\r\n\r\nDescription: списывает деньги со счета одного, прибавляет другому. Добавляет перевод в историю транзакций со типом \"TRANSFER\""
			},
			"response": []
		},
		{
			"name": "Reserve",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user_account_id\": 1,\r\n\t\"service_id\": 1,\r\n\t\"order_id\": 1,\r\n\t\"price\": 2000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/v1/account/reserve",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"account",
						"reserve"
					]
				},
				"description": "Request body:\r\n\r\nuser_account_id - (uint) идентификатор счета\r\n\r\nservice_id - (uint) идентификатор услуги\r\n\r\norder_id - (uint) идентификатор заказа\r\n\r\nprice - (float) стоимость\r\n\r\nDescription: переводит зарезервированную сумму на отдельный счет, создает запись с запонанием статуса обработки заказа, добавляет перевод в историю.\r\n\r\n"
			},
			"response": []
		},
		{
			"name": "Push order status",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"COMPLETED\",\r\n    \"order_id\": 1,\r\n\t\"user_account_id\": 1,\r\n\t\"amount\": 2000,\r\n\t\"user_service_id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9091/api/v1/orders/process",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9091",
					"path": [
						"api",
						"v1",
						"orders",
						"process"
					]
				},
				"description": "Request body:\r\n\r\nuser_account_id - (uint) идентификатор счета\r\n\r\nservice_id - (uint) идентификатор услуги\r\n\r\norder_id - (uint) идентификатор заказа\r\n\r\nprice - (float) стоимость\r\n\r\nstatus - (\"COMPLETED\"/other) статус исполнения заказа от стороннего сервиса\r\n\r\nDescription: отправка в очередь. Для успешной обработки заказ нужно status = \"COMPETED\". Все остальные статусы будут обрабатываться, но считаться неуспешными."
			},
			"response": []
		},
		{
			"name": "Push failed order status",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"FAILED\",\r\n    \"order_id\": 2,\r\n\t\"user_account_id\": 1,\r\n\t\"amount\": 2000,\r\n\t\"user_id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9091/api/v1/orders/process",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9091",
					"path": [
						"api",
						"v1",
						"orders",
						"process"
					]
				},
				"description": "Request body:\r\n\r\nuser_account_id - (uint) идентификатор счета\r\n\r\nservice_id - (uint) идентификатор услуги\r\n\r\norder_id - (uint) идентификатор заказа\r\n\r\nprice - (float) стоимость\r\n\r\nstatus - (\"COMPLETED\"/other) статус исполнения заказа от стороннего сервиса\r\n\r\nDescription: отправка в очередь. Для успешной обработки заказ нужно status = \"COMPETED\". Все остальные статусы будут обрабатываться, но считаться неуспешными."
			},
			"response": []
		},
		{
			"name": "Get transactions with default pagination",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/v1/accounts/1/transactions?page=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"accounts",
						"1",
						"transactions"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				},
				"description": "Query:\r\n\r\ndate_sort - (asc/desc/нету значения) сортировка по дате\r\n\r\namount_sort - (asc/desc/нету значения) сортировка по сумме\r\n\r\npage - (uint) - порядковый номер желаемой выборки\r\n\r\nDescription: размера элементов в одной странице - 9. Сортировка по дате и сумме - возрастающее/убывающее/нету. Значения выбираются из transactions для указанного счета"
			},
			"response": []
		},
		{
			"name": "Get transactions with date sort",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/v1/accounts/1/transactions?date_sort=asc&page=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"accounts",
						"1",
						"transactions"
					],
					"query": [
						{
							"key": "date_sort",
							"value": "asc"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				},
				"description": "Query:\r\n\r\ndate_sort - (asc/desc/нету значения) сортировка по дате\r\n\r\namount_sort - (asc/desc/нету значения) сортировка по сумме\r\n\r\npage - (uint) - порядковый номер желаемой выборки\r\n\r\nDescription: размера элементов в одной странице - 9. Сортировка по дате и сумме - возрастающее/убывающее/нету. Значения выбираются из transactions для указанного счета"
			},
			"response": []
		},
		{
			"name": "Get transactions with amount sort",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/v1/accounts/1/transactions?amount_sort=asc&page=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"accounts",
						"1",
						"transactions"
					],
					"query": [
						{
							"key": "amount_sort",
							"value": "asc"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				},
				"description": "Query:\r\n\r\ndate_sort - (asc/desc/нету значения) сортировка по дате\r\n\r\namount_sort - (asc/desc/нету значения) сортировка по сумме\r\n\r\npage - (uint) - порядковый номер желаемой выборки\r\n\r\nDescription: размера элементов в одной странице - 9. Сортировка по дате и сумме - возрастающее/убывающее/нету. Значения выбираются из transactions для указанного счета"
			},
			"response": []
		},
		{
			"name": "Generate CSV",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/v1/report/service/profit?year=2022&month=11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"v1",
						"report",
						"service",
						"profit"
					],
					"query": [
						{
							"key": "year",
							"value": "2022"
						},
						{
							"key": "month",
							"value": "11"
						}
					]
				},
				"description": "Query:\r\n\r\nyear - (uint) год\r\n\r\nmonth - (uint) месяц\r\n\r\nDescription: Создает отчет по прибыли в разрезе всех категорий услуг по всем пользователям за выбранный период. Файл сохраняется в каталоге reports/ в корне проекта. На запрос статус, а не ссылка. Это сделано для удоства, чтобы не передавать через env в image абсолютный путь."
			},
			"response": []
		}
	]
}